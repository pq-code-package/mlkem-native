/*
 * Copyright (c) The mlkem-native project authors
 * Copyright (c) 2021-2022 Arm Limited
 * Copyright (c) 2022 Matthias Kannwischer
 * SPDX-License-Identifier: Apache-2.0 OR ISC OR MIT
 */


// Author: Hanno Becker <hanno.becker@arm.com>
// Author: Matthias Kannwischer <matthias@kannwischer.eu>


/*yaml
  Name: keccak_f1600_x1_scalar_no_lazy_symbolic
  Description: AArch64 scalar symbolic implementation of Keccak-f[1600] permutation for single state (no lazy rotation version for optimization)
  Signature: void mlk_keccak_f1600_x1_scalar_no_lazy_asm(uint64_t state[25], const uint64_t rc[24])
  ABI:
    x0:
      type: buffer
      size_bytes: 200
      permissions: read/write
      c_parameter: uint64_t *state
      description: Keccak state (25 x uint64_t)
    x1:
      type: buffer
      size_bytes: 192
      permissions: read-only
      c_parameter: uint64_t const *rc
      description: Round constants (24 x uint64_t)
  Stack:
    bytes: 128
    description: register preservation and temporary storage
*/

#include "../../../../common.h"
#if defined(MLK_FIPS202_AARCH64_NEED_X1_SCALAR) &&  !defined(MLK_CONFIG_MULTILEVEL_NO_SHARED)
/* simpasm: header-end */

/****************** REGISTER ALLOCATIONS *******************/

    input_addr     .req x0
    input_rc       .req x1
    const_addr     .req x26

    /* Mapping of Kecck-f1600 state to scalar registers
     * at the beginning and end of each round. */
    Aba     .req x1
    Abe     .req x6
    Abi     .req x11
    Abo     .req x16
    Abu     .req x21
    Aga     .req x2
    Age     .req x7
    Agi     .req x12
    Ago     .req x17
    Agu     .req x22
    Aka     .req x3
    Ake     .req x8
    Aki     .req x13
    Ako     .req x28
    Aku     .req x23
    Ama     .req x4
    Ame     .req x9
    Ami     .req x14
    Amo     .req x19
    Amu     .req x24
    Asa     .req x5
    Ase     .req x10
    Asi     .req x15
    Aso     .req x20
    Asu     .req x25

/************************ MACROS ****************************/

/* Allocate a large number of stack slots by default so one can quickly
 * check functional correctness by stopping SLOTHY's register allocation
 * and stack spilling process while still using a large number of spills.
 *
 * NOTE:
 * This should to be manually trimmed to the number of stack locations
 * actually used after running SLOTHY.
 */
#define STACK_LOCS 40

// GPRs (16*6), count (8), const (8), input (8), padding (8)
#define STACK_SIZE (16*6 + 3*8 + 8 + (STACK_LOCS) * 8)
#define STACK_BASE_GPRS (3*8+8)
#define STACK_LOC_INPUT (0*8)
#define STACK_LOC_CONST (1*8)
#define STACK_LOC_COUNT (2*8)
#define STACK_LOC_MISC  (16*6 + 4*8)

#define STACK_LOC_0 ((STACK_LOC_MISC) + 0*8)
#define STACK_LOC_1 ((STACK_LOC_MISC) + 1*8)
#define STACK_LOC_2 ((STACK_LOC_MISC) + 2*8)
#define STACK_LOC_3 ((STACK_LOC_MISC) + 3*8)
#define STACK_LOC_4 ((STACK_LOC_MISC) + 4*8)
#define STACK_LOC_5 ((STACK_LOC_MISC) + 5*8)
#define STACK_LOC_6 ((STACK_LOC_MISC) + 6*8)
#define STACK_LOC_7 ((STACK_LOC_MISC) + 7*8)
#define STACK_LOC_8 ((STACK_LOC_MISC) + 8*8)
#define STACK_LOC_9 ((STACK_LOC_MISC) + 9*8)
#define STACK_LOC_10 ((STACK_LOC_MISC) + 10*8)
#define STACK_LOC_11 ((STACK_LOC_MISC) + 11*8)
#define STACK_LOC_12 ((STACK_LOC_MISC) + 12*8)
#define STACK_LOC_13 ((STACK_LOC_MISC) + 13*8)
#define STACK_LOC_14 ((STACK_LOC_MISC) + 14*8)
#define STACK_LOC_15 ((STACK_LOC_MISC) + 15*8)
#define STACK_LOC_16 ((STACK_LOC_MISC) + 16*8)
#define STACK_LOC_17 ((STACK_LOC_MISC) + 17*8)
#define STACK_LOC_18 ((STACK_LOC_MISC) + 18*8)
#define STACK_LOC_19 ((STACK_LOC_MISC) + 19*8)
#define STACK_LOC_20 ((STACK_LOC_MISC) + 20*8)
#define STACK_LOC_21 ((STACK_LOC_MISC) + 21*8)
#define STACK_LOC_22 ((STACK_LOC_MISC) + 22*8)
#define STACK_LOC_23 ((STACK_LOC_MISC) + 23*8)
#define STACK_LOC_24 ((STACK_LOC_MISC) + 24*8)
#define STACK_LOC_25 ((STACK_LOC_MISC) + 25*8)
#define STACK_LOC_26 ((STACK_LOC_MISC) + 26*8)
#define STACK_LOC_27 ((STACK_LOC_MISC) + 27*8)
#define STACK_LOC_28 ((STACK_LOC_MISC) + 28*8)
#define STACK_LOC_29 ((STACK_LOC_MISC) + 29*8)
#define STACK_LOC_30 ((STACK_LOC_MISC) + 30*8)
#define STACK_LOC_31 ((STACK_LOC_MISC) + 31*8)
#define STACK_LOC_32 ((STACK_LOC_MISC) + 32*8)
#define STACK_LOC_33 ((STACK_LOC_MISC) + 33*8)
#define STACK_LOC_34 ((STACK_LOC_MISC) + 34*8)
#define STACK_LOC_35 ((STACK_LOC_MISC) + 35*8)
#define STACK_LOC_36 ((STACK_LOC_MISC) + 36*8)
#define STACK_LOC_37 ((STACK_LOC_MISC) + 37*8)
#define STACK_LOC_38 ((STACK_LOC_MISC) + 38*8)
#define STACK_LOC_39 ((STACK_LOC_MISC) + 39*8)

.macro alloc_stack
    sub sp, sp, #(STACK_SIZE)
.endm

.macro free_stack
    add sp, sp, #(STACK_SIZE)
.endm

.macro save_gprs
    stp x19, x20, [sp, #(STACK_BASE_GPRS + 16*0)]
    stp x21, x22, [sp, #(STACK_BASE_GPRS + 16*1)]
    stp x23, x24, [sp, #(STACK_BASE_GPRS + 16*2)]
    stp x25, x26, [sp, #(STACK_BASE_GPRS + 16*3)]
    stp x27, x28, [sp, #(STACK_BASE_GPRS + 16*4)]
    stp x29, x30, [sp, #(STACK_BASE_GPRS + 16*5)]
.endm

.macro restore_gprs
    ldp x19, x20, [sp, #(STACK_BASE_GPRS + 16*0)]
    ldp x21, x22, [sp, #(STACK_BASE_GPRS + 16*1)]
    ldp x23, x24, [sp, #(STACK_BASE_GPRS + 16*2)]
    ldp x25, x26, [sp, #(STACK_BASE_GPRS + 16*3)]
    ldp x27, x28, [sp, #(STACK_BASE_GPRS + 16*4)]
    ldp x29, x30, [sp, #(STACK_BASE_GPRS + 16*5)]
.endm

.macro eor5 dst, src0, src1, src2, src3, src4
    eor \dst, \src0, \src1
    eor \dst, \dst,  \src2
    eor \dst, \dst,  \src3
    eor \dst, \dst,  \src4
.endm

.macro  chi_step_ror out, a, b, c, r1, r2
    bic X<tmp>, \b\(), \c\(), ror #\r1
    eor \out\(), X<tmp>, \a\(), ror #\r2
.endm

.macro  chi_step_ror2 out, a, b, c, r1, r2
    bic X<tmp>, \b\(), \c\(), ror #\r1
    eor \out\(), \a\(), X<tmp>, ror #\r2
.endm

.macro keccak_f1600_round_initial
    eor5 X<C0>, Ama, Asa, Aba, Aga, Aka
    eor5 X<C1>, Ame, Ase, Abe, Age, Ake
    eor5 X<C2>, Ami, Asi, Abi, Agi, Aki
    eor5 X<C3>, Amo, Aso, Abo, Ago, Ako
    eor5 X<C4>, Amu, Asu, Abu, Agu, Aku

    eor X<E1>, X<C0>, X<C2>, ror #63
    eor X<E3>, X<C2>, X<C4>, ror #63
    eor X<E0>, X<C4>, X<C1>, ror #63
    eor X<E2>, X<C1>, X<C3>, ror #63
    eor X<E4>, X<C3>, X<C0>, ror #63

    eor X<Bba>, Aba, X<E0>
    eor X<Bsa>, Abi, X<E2>
    eor X<Bbi>, Aki, X<E2>
    eor X<Bki>, Ako, X<E3>
    eor X<Bko>, Amu, X<E4>
    eor X<Bmu>, Aso, X<E3>
    eor X<Bso>, Ama, X<E0>
    eor X<Bka>, Abe, X<E1>
    eor X<Bse>, Ago, X<E3>
    eor X<Bgo>, Ame, X<E1>
    eor X<Bke>, Agi, X<E2>
    eor X<Bgi>, Aka, X<E0>
    eor X<Bga>, Abo, X<E3>
    eor X<Bbo>, Amo, X<E3>
    eor X<Bmo>, Ami, X<E2>
    eor X<Bmi>, Ake, X<E1>
    eor X<Bge>, Agu, X<E4>
    eor X<Bgu>, Asi, X<E2>
    eor X<Bsi>, Aku, X<E4>
    eor X<Bku>, Asa, X<E0>
    eor X<Bma>, Abu, X<E4>
    eor X<Bbu>, Asu, X<E4>
    eor X<Bsu>, Ase, X<E1>
    eor X<Bme>, Aga, X<E0>
    eor X<Bbe>, Age, X<E1>

    ldr X<caddr>, [sp, #STACK_LOC_CONST]
    ldr X<cur_const>, [X<caddr>]
    mov X<count>, #1
    str X<count>, [sp, #STACK_LOC_COUNT] // @slothy:writes=STACK_LOC_COUNT

    chi_step_ror Aga, X<Bga>, X<Bgi>, X<Bge>, 47, 39
    chi_step_ror Age, X<Bge>, X<Bgo>, X<Bgi>, 42, 25
    chi_step_ror Agi, X<Bgi>, X<Bgu>, X<Bgo>, 16, 58
    chi_step_ror Ago, X<Bgo>, X<Bga>, X<Bgu>, 31, 47
    chi_step_ror Agu, X<Bgu>, X<Bge>, X<Bga>, 56, 23
    chi_step_ror Aka, X<Bka>, X<Bki>, X<Bke>, 19, 24
    chi_step_ror Ake, X<Bke>, X<Bko>, X<Bki>, 47, 2
    chi_step_ror Aki, X<Bki>, X<Bku>, X<Bko>, 10, 57
    chi_step_ror Ako, X<Bko>, X<Bka>, X<Bku>, 47, 57
    chi_step_ror Aku, X<Bku>, X<Bke>, X<Bka>, 5,  52
    chi_step_ror Ama, X<Bma>, X<Bmi>, X<Bme>, 38, 47
    chi_step_ror Ame, X<Bme>, X<Bmo>, X<Bmi>, 5,  43
    chi_step_ror Ami, X<Bmi>, X<Bmu>, X<Bmo>, 41, 46
    chi_step_ror Amo, X<Bmo>, X<Bma>, X<Bmu>, 35, 12
    chi_step_ror Amu, X<Bmu>, X<Bme>, X<Bma>, 9,  44
    chi_step_ror Asa, X<Bsa>, X<Bsi>, X<Bse>, 48, 41
    chi_step_ror Ase, X<Bse>, X<Bso>, X<Bsi>, 2,  50
    chi_step_ror Asi, X<Bsi>, X<Bsu>, X<Bso>, 25, 27
    chi_step_ror Aso, X<Bso>, X<Bsa>, X<Bsu>, 60, 21
    chi_step_ror Asu, X<Bsu>, X<Bse>, X<Bsa>, 57, 53
    chi_step_ror2 Aba, X<Bba>, X<Bbi>, X<Bbe>, 63, 21
    chi_step_ror Abe, X<Bbe>, X<Bbo>, X<Bbi>, 42, 41
    chi_step_ror Abi, X<Bbi>, X<Bbu>, X<Bbo>, 57, 35
    chi_step_ror Abo, X<Bbo>, X<Bba>, X<Bbu>, 50, 43
    chi_step_ror Abu, X<Bbu>, X<Bbe>, X<Bba>, 44, 30

    eor Aba, Aba, X<cur_const>

.endm

.macro keccak_f1600_round_noninitial

    eor X<C0>, Aba,   Aga, ror #61
    eor X<C0>, X<C0>, Ama, ror #54
    eor X<C0>, X<C0>, Aka, ror #39
    eor X<C0>, X<C0>, Asa, ror #25

    eor X<C1>, Ake,   Ame, ror #57
    eor X<C1>, X<C1>, Abe, ror #51
    eor X<C1>, X<C1>, Ase, ror #31
    eor X<C1>, X<C1>, Age, ror #27

    eor X<C2>, Asi,   Abi, ror #52
    eor X<C2>, X<C2>, Aki, ror #48
    eor X<C2>, X<C2>, Ami, ror #10
    eor X<C2>, X<C2>, Agi, ror #5

    eor X<C3>, Abo,   Ako, ror #63
    eor X<C3>, X<C3>, Amo, ror #37
    eor X<C3>, X<C3>, Ago, ror #36
    eor X<C3>, X<C3>, Aso, ror #2

    eor X<C4>, Aku,   Agu, ror #50
    eor X<C4>, X<C4>, Amu, ror #34
    eor X<C4>, X<C4>, Abu, ror #26
    eor X<C4>, X<C4>, Asu, ror #15

    eor X<E1>, X<C0>, X<C2>, ror #61
    ror X<C2>, X<C2>, #62
    eor X<E3>, X<C2>, X<C4>, ror #57
    ror X<C4>, X<C4>, #58
    eor X<E0>, X<C4>, X<C1>, ror #55
    ror X<C1>, X<C1>, #56
    eor X<E2>, X<C1>, X<C3>, ror #63
    eor X<E4>, X<C3>, X<C0>, ror #63

    eor X<Bba>, X<E0>, Aba
    eor X<Bsa>, X<E2>, Abi, ror #50
    eor X<Bbi>, X<E2>, Aki, ror #46
    eor X<Bki>, X<E3>, Ako, ror #63
    eor X<Bko>, X<E4>, Amu, ror #28
    eor X<Bmu>, X<E3>, Aso, ror #2
    eor X<Bso>, X<E0>, Ama, ror #54
    eor X<Bka>, X<E1>, Abe, ror #43
    eor X<Bse>, X<E3>, Ago, ror #36
    eor X<Bgo>, X<E1>, Ame, ror #49
    eor X<Bke>, X<E2>, Agi, ror #3
    eor X<Bgi>, X<E0>, Aka, ror #39
    eor X<Bga>, X<E3>, Abo
    eor X<Bbo>, X<E3>, Amo, ror #37
    eor X<Bmo>, X<E2>, Ami, ror #8
    eor X<Bmi>, X<E1>, Ake, ror #56
    eor X<Bge>, X<E4>, Agu, ror #44
    eor X<Bgu>, X<E2>, Asi, ror #62
    eor X<Bsi>, X<E4>, Aku, ror #58
    eor X<Bku>, X<E0>, Asa, ror #25
    eor X<Bma>, X<E4>, Abu, ror #20
    eor X<Bbu>, X<E4>, Asu, ror #9
    eor X<Bsu>, X<E1>, Ase, ror #23
    eor X<Bme>, X<E0>, Aga, ror #61
    eor X<Bbe>, X<E1>, Age, ror #19

    ldr X<caddr>, [sp, #STACK_LOC_CONST]
    ldr X<count>, [sp, #STACK_LOC_COUNT] // @slothy:reads=STACK_LOC_COUNT
    ldr X<cur_const>, [X<caddr>, X<count>, LSL #3]
    add X<count>, X<count>, #1
    cmp X<count>, #(KECCAK_F1600_ROUNDS-1) // @slothy:ignore_useless_output
    str X<count>, [sp, #STACK_LOC_COUNT] // @slothy:writes=STACK_LOC_COUNT

    chi_step_ror Aga, X<Bga>, X<Bgi>, X<Bge>, 47, 39
    chi_step_ror Age, X<Bge>, X<Bgo>, X<Bgi>, 42, 25
    chi_step_ror Agi, X<Bgi>, X<Bgu>, X<Bgo>, 16, 58
    chi_step_ror Ago, X<Bgo>, X<Bga>, X<Bgu>, 31, 47
    chi_step_ror Agu, X<Bgu>, X<Bge>, X<Bga>, 56, 23
    chi_step_ror Aka, X<Bka>, X<Bki>, X<Bke>, 19, 24
    chi_step_ror Ake, X<Bke>, X<Bko>, X<Bki>, 47, 2
    chi_step_ror Aki, X<Bki>, X<Bku>, X<Bko>, 10, 57
    chi_step_ror Ako, X<Bko>, X<Bka>, X<Bku>, 47, 57
    chi_step_ror Aku, X<Bku>, X<Bke>, X<Bka>, 5,  52
    chi_step_ror Ama, X<Bma>, X<Bmi>, X<Bme>, 38, 47
    chi_step_ror Ame, X<Bme>, X<Bmo>, X<Bmi>, 5,  43
    chi_step_ror Ami, X<Bmi>, X<Bmu>, X<Bmo>, 41, 46
    chi_step_ror Amo, X<Bmo>, X<Bma>, X<Bmu>, 35, 12
    chi_step_ror Amu, X<Bmu>, X<Bme>, X<Bma>, 9,  44
    chi_step_ror Asa, X<Bsa>, X<Bsi>, X<Bse>, 48, 41
    chi_step_ror Ase, X<Bse>, X<Bso>, X<Bsi>, 2,  50
    chi_step_ror Asi, X<Bsi>, X<Bsu>, X<Bso>, 25, 27
    chi_step_ror Aso, X<Bso>, X<Bsa>, X<Bsu>, 60, 21
    chi_step_ror Asu, X<Bsu>, X<Bse>, X<Bsa>, 57, 53
    chi_step_ror2 Aba, X<Bba>, X<Bbi>, X<Bbe>, 63, 21
    chi_step_ror Abe, X<Bbe>, X<Bbo>, X<Bbi>, 42, 41
    chi_step_ror Abi, X<Bbi>, X<Bbu>, X<Bbo>, 57, 35
    chi_step_ror Abo, X<Bbo>, X<Bba>, X<Bbu>, 50, 43
    chi_step_ror Abu, X<Bbu>, X<Bbe>, X<Bba>, 44, 30

    eor Aba, Aba, X<cur_const>
.endm

.macro load_state
    ldp Aba, Abe, [input_addr, #(1*8*0)]
    ldp Abi, Abo, [input_addr, #(1*8*2)]
    ldp Abu, Aga, [input_addr, #(1*8*4)]
    ldp Age, Agi, [input_addr, #(1*8*6)]
    ldp Ago, Agu, [input_addr, #(1*8*8)]
    ldp Aka, Ake, [input_addr, #(1*8*10)]
    ldp Aki, Ako, [input_addr, #(1*8*12)]
    ldp Aku, Ama, [input_addr, #(1*8*14)]
    ldp Ame, Ami, [input_addr, #(1*8*16)]
    ldp Amo, Amu, [input_addr, #(1*8*18)]
    ldp Asa, Ase, [input_addr, #(1*8*20)]
    ldp Asi, Aso, [input_addr, #(1*8*22)]
    ldr Asu,      [input_addr, #(1*8*24)]
.endm

.macro store_state
    stp Aba, Abe, [input_addr, #(1*8*0)]
    stp Abi, Abo, [input_addr, #(1*8*2)]
    stp Abu, Aga, [input_addr, #(1*8*4)]
    stp Age, Agi, [input_addr, #(1*8*6)]
    stp Ago, Agu, [input_addr, #(1*8*8)]
    stp Aka, Ake, [input_addr, #(1*8*10)]
    stp Aki, Ako, [input_addr, #(1*8*12)]
    stp Aku, Ama, [input_addr, #(1*8*14)]
    stp Ame, Ami, [input_addr, #(1*8*16)]
    stp Amo, Amu, [input_addr, #(1*8*18)]
    stp Asa, Ase, [input_addr, #(1*8*20)]
    stp Asi, Aso, [input_addr, #(1*8*22)]
    str Asu,      [input_addr, #(1*8*24)]
.endm

.macro final_rotate
    ror Abe, Abe,#(64-21)
    ror Abi, Abi,#(64-14)
    ror Abu, Abu,#(64-44)
    ror Aga, Aga,#(64-3)
    ror Age, Age,#(64-45)
    ror Agi, Agi,#(64-61)
    ror Ago, Ago,#(64-28)
    ror Agu, Agu,#(64-20)
    ror Aka, Aka,#(64-25)
    ror Ake, Ake,#(64-8)
    ror Aki, Aki,#(64-18)
    ror Ako, Ako,#(64-1)
    ror Aku, Aku,#(64-6)
    ror Ama, Ama,#(64-10)
    ror Ame, Ame,#(64-15)
    ror Ami, Ami,#(64-56)
    ror Amo, Amo,#(64-27)
    ror Amu, Amu,#(64-36)
    ror Asa, Asa,#(64-39)
    ror Ase, Ase,#(64-41)
    ror Asi, Asi,#(64-2)
    ror Aso, Aso,#(64-62)
    ror Asu, Asu,#(64-55)
.endm

#define KECCAK_F1600_ROUNDS 24

    .text
    .global MLK_ASM_NAMESPACE(keccak_f1600_x1_scalar_no_lazy_asm)
    .balign 4
MLK_ASM_FN_SYMBOL(keccak_f1600_x1_scalar_no_lazy_asm)
    alloc_stack
    save_gprs

keccak_f1600_x1_scalar_no_lazy_initial:
    mov const_addr, input_rc
    str input_rc, [sp, #STACK_LOC_CONST]
    load_state
    str input_addr, [sp, #STACK_LOC_INPUT] // @slothy:writes=STACK_LOC_INPUT

        keccak_f1600_x1_scalar_no_lazy_initial_start:
                                               // Instructions:    105
                                               // Expected cycles: 53
                                               // Expected IPC:    1.98
                                               //
                                               // Cycle bound:     53.0
                                               // IPC bound:       1.98
                                               //
                                               // Wall time:     139.54s
                                               // User time:     139.54s
                                               //
                                               // ----------------- cycle (expected) ----------------->
                                               // 0                        25                       50
                                               // |------------------------|------------------------|--
        eor x27, x14, x15                      // *....................................................
        eor x26, x27, x11                      // *....................................................
        eor x27, x26, x12                      // .*...................................................
        eor x29, x27, x13                      // .*...................................................
        eor x27, x4, x5                        // ..*..................................................
        eor x30, x27, x1                       // ..*..................................................
        eor x30, x30, x2                       // ...*.................................................
        eor x30, x30, x3                       // ...*.................................................
        eor x0, x30, x29, ror #63              // ....*................................................
        eor x27, x6, x0                        // ....*................................................
        str x27, [sp, #STACK_LOC_0]            // ....s................................................ // @slothy:is_spill // @slothy:writes=stack_0
        eor x27, x24, x25                      // .....*...............................................
        eor x27, x27, x21                      // .....*...............................................
        eor x26, x27, x22                      // ......*..............................................
        eor x26, x26, x23                      // ......*..............................................
        eor x29, x29, x26, ror #63             // .......*.............................................
        eor x27, x17, x29                      // .......*.............................................
        str x27, [sp, #STACK_LOC_1]            // .......s............................................. // @slothy:is_spill // @slothy:writes=stack_1
        eor x27, x19, x20                      // ........*............................................
        eor x27, x27, x16                      // ........*............................................
        eor x17, x27, x17                      // .........*...........................................
        eor x27, x17, x28                      // .........*...........................................
        eor x17, x9, x10                       // ..........*..........................................
        eor x6, x17, x6                        // ..........*..........................................
        eor x6, x6, x7                         // ...........*.........................................
        eor x6, x6, x8                         // ...........*.........................................
        eor x26, x26, x6, ror #63              // ............*........................................
        eor x4, x4, x26                        // ............*........................................
        eor x17, x27, x30, ror #63             // .............*.......................................
        eor x30, x23, x17                      // .............*.......................................
        bic x23, x4, x30, ror #2               // ..............*......................................
        str x23, [sp, #STACK_LOC_2]            // ..............s...................................... // @slothy:is_spill // @slothy:writes=stack_2
        eor x6, x6, x27, ror #63               // ..............*......................................
        eor x27, x15, x6                       // ...............*.....................................
        eor x15, x9, x0                        // ...............*.....................................
        bic x23, x27, x15, ror #16             // ................*....................................
        str x23, [sp, #STACK_LOC_3]            // ................s.................................... // @slothy:is_spill // @slothy:writes=stack_3
        eor x23, x2, x26                       // ................*....................................
        str x23, [sp, #STACK_LOC_4]            // ................s.................................... // @slothy:is_spill // @slothy:writes=stack_4
        eor x23, x16, x29                      // .................*...................................
        bic x2, x23, x27, ror #31              // .................*...................................
        str x2, [sp, #STACK_LOC_5]             // .................s................................... // @slothy:is_spill // @slothy:writes=stack_5
        eor x16, x22, x17                      // ..................*..................................
        bic x9, x16, x23, ror #56              // ..................*..................................
        eor x22, x9, x27, ror #23              // ...................*.................................
        ldr x27, [sp, #STACK_LOC_1]            // ...................r................................. // @slothy:is_restore // @slothy:reads=stack_1
        str x22, [sp, #STACK_LOC_1]            // ...................s................................. // @slothy:is_spill // @slothy:writes=stack_1
        bic x9, x30, x27, ror #48              // ...................*.................................
        str x9, [sp, #STACK_LOC_6]             // ...................s................................. // @slothy:is_spill // @slothy:writes=stack_6
        eor x9, x3, x26                        // ....................*................................
        bic x22, x9, x16, ror #47              // ....................*................................
        eor x2, x22, x23, ror #39              // .....................*...............................
        str x2, [sp, #STACK_LOC_7]             // .....................s............................... // @slothy:is_spill // @slothy:writes=stack_7
        eor x3, x28, x29                       // .....................*...............................
        str x3, [sp, #STACK_LOC_8]             // .....................s............................... // @slothy:is_spill // @slothy:writes=stack_8
        eor x10, x10, x0                       // ......................*..............................
        eor x3, x11, x6                        // ......................*..............................
        bic x22, x3, x10, ror #60              // .......................*.............................
        eor x28, x14, x6                       // ........................*............................
        eor x14, x12, x6                       // ........................*............................
        ldr x23, [sp, #STACK_LOC_3]            // ........................r............................ // @slothy:is_restore // @slothy:reads=stack_3
        str x14, [sp, #STACK_LOC_3]            // ........................s............................ // @slothy:is_spill // @slothy:writes=stack_3
        eor x12, x23, x9, ror #58              // .........................*...........................
        str x12, [sp, #STACK_LOC_9]            // .........................s........................... // @slothy:is_spill // @slothy:writes=stack_9
        ldr x2, [sp, #STACK_LOC_CONST]         // .........................*...........................
        str x2, [sp, #STACK_LOC_10]            // .........................s........................... // @slothy:is_spill // @slothy:writes=stack_10
        bic x9, x15, x9, ror #42               // ..........................*..........................
        eor x2, x7, x0                         // ..........................*..........................
        eor x11, x21, x17                      // ...........................*.........................
        mov x12, #1                            // ...........................*.........................
        eor x7, x9, x16, ror #25               // ............................*........................
        bic x23, x27, x3, ror #57              // ............................*........................
        eor x8, x8, x0                         // .............................*.......................
        bic x21, x10, x4, ror #25              // .............................*.......................
        str x12, [sp, #STACK_LOC_COUNT]        // ..............................*...................... // @slothy:writes=STACK_LOC_COUNT
        eor x12, x24, x17                      // ..............................*......................
        eor x14, x25, x17                      // ...............................*.....................
        eor x25, x19, x29                      // ...............................*.....................
        eor x29, x20, x29                      // ................................*....................
        str x29, [sp, #STACK_LOC_11]           // ................................s.................... // @slothy:is_spill // @slothy:writes=stack_11
        eor x20, x22, x4, ror #21              // ................................*....................
        ldr x29, [sp, #STACK_LOC_11]           // ................................r.................... // @slothy:is_restore // @slothy:reads=stack_11
        eor x24, x13, x6                       // .................................*...................
        eor x9, x1, x26                        // .................................*...................
        bic x17, x14, x25, ror #57             // ..................................*..................
        str x17, [sp, #STACK_LOC_11]           // ..................................s.................. // @slothy:is_spill // @slothy:writes=stack_11
        bic x19, x24, x2, ror #63              // ..................................*..................
        ldr x17, [sp, #STACK_LOC_11]           // ..................................r.................. // @slothy:is_restore // @slothy:reads=stack_11
        eor x22, x9, x19, ror #21              // ...................................*.................
        bic x6, x25, x24, ror #42              // ...................................*.................
        eor x1, x5, x26                        // ....................................*................
        bic x4, x9, x14, ror #50               // ....................................*................
        bic x0, x11, x29, ror #35              // .....................................*...............
        eor x16, x4, x25, ror #43              // .....................................*...............
        eor x25, x23, x10, ror #53             // ......................................*..............
        ldr x23, [sp, #STACK_LOC_2]            // ......................................r.............. // @slothy:is_restore // @slothy:reads=stack_2
        eor x10, x23, x27, ror #50             // ......................................*..............
        ldr x23, [sp, #STACK_LOC_4]            // ......................................r.............. // @slothy:is_restore // @slothy:reads=stack_4
        bic x5, x8, x23, ror #38               // .......................................*.............
        str x5, [sp, #STACK_LOC_2]             // .......................................s............. // @slothy:is_spill // @slothy:writes=stack_2
        bic x26, x29, x28, ror #41             // .......................................*.............
        ldr x5, [sp, #STACK_LOC_2]             // .......................................r............. // @slothy:is_restore // @slothy:reads=stack_2
        bic x27, x23, x11, ror #9              // ........................................*............
        bic x13, x2, x9, ror #44               // ........................................*............
        ldr x9, [sp, #STACK_LOC_6]             // ........................................r............ // @slothy:is_restore // @slothy:reads=stack_6
        str x13, [sp, #STACK_LOC_2]            // ........................................s............ // @slothy:is_spill // @slothy:writes=stack_2
        eor x4, x5, x11, ror #47               // .........................................*...........
        ldr x13, [sp, #STACK_LOC_2]            // .........................................r........... // @slothy:is_restore // @slothy:reads=stack_2
        eor x5, x9, x3, ror #41                // .........................................*...........
        ldr x3, [sp, #STACK_LOC_8]             // .........................................r........... // @slothy:is_restore // @slothy:reads=stack_8
        eor x6, x6, x2, ror #41                // ..........................................*..........
        ldr x2, [sp, #STACK_LOC_5]             // ..........................................r.......... // @slothy:is_restore // @slothy:reads=stack_5
        eor x11, x17, x24, ror #35             // ..........................................*..........
        eor x17, x2, x15, ror #47              // ...........................................*.........
        ldr x2, [sp, #STACK_LOC_10]            // ...........................................r......... // @slothy:is_restore // @slothy:reads=stack_10
        str x17, [sp, #STACK_LOC_2]            // ...........................................s......... // @slothy:is_spill // @slothy:writes=stack_2
        eor x15, x21, x30, ror #27             // ...........................................*.........
        eor x24, x27, x29, ror #44             // ............................................*........
        ldr x27, [sp, #STACK_LOC_0]            // ............................................r........ // @slothy:is_restore // @slothy:reads=stack_0
        bic x30, x27, x1, ror #47              // ............................................*........
        str x30, [sp, #STACK_LOC_0]            // ............................................s........ // @slothy:is_spill // @slothy:writes=stack_0
        eor x21, x13, x14, ror #30             // .............................................*.......
        ldr x30, [sp, #STACK_LOC_0]            // .............................................r....... // @slothy:is_restore // @slothy:reads=stack_0
        eor x19, x0, x28, ror #12              // .............................................*.......
        bic x0, x28, x8, ror #5                // ..............................................*......
        eor x28, x30, x12, ror #57             // ..............................................*......
        bic x17, x1, x12, ror #10              // ...............................................*.....
        ldr x29, [x2]                          // ...............................................*.....
        ldr x2, [sp, #STACK_LOC_7]             // ...............................................r..... // @slothy:is_restore // @slothy:reads=stack_7
        bic x12, x12, x3, ror #47              // ................................................*....
        str x12, [sp, #STACK_LOC_0]            // ................................................s.... // @slothy:is_spill // @slothy:writes=stack_0
        eor x14, x26, x8, ror #46              // ................................................*....
        ldr x12, [sp, #STACK_LOC_0]            // ................................................r.... // @slothy:is_restore // @slothy:reads=stack_0
        str x14, [sp, #STACK_LOC_0]            // ................................................s.... // @slothy:is_spill // @slothy:writes=stack_0
        eor x13, x17, x3, ror #57              // .................................................*...
        ldr x14, [sp, #STACK_LOC_3]            // .................................................r... // @slothy:is_restore // @slothy:reads=stack_3
        eor x8, x12, x14, ror #2               // .................................................*...
        ldr x12, [sp, #STACK_LOC_9]            // .................................................r... // @slothy:is_restore // @slothy:reads=stack_9
        bic x17, x3, x14, ror #19              // ..................................................*..
        eor x3, x17, x27, ror #24              // ..................................................*..
        ldr x17, [sp, #STACK_LOC_2]            // ..................................................r.. // @slothy:is_restore // @slothy:reads=stack_2
        bic x26, x14, x27, ror #5              // ...................................................*.
        ldr x14, [sp, #STACK_LOC_0]            // ...................................................r. // @slothy:is_restore // @slothy:reads=stack_0
        eor x9, x0, x23, ror #43               // ...................................................*.
        eor x23, x26, x1, ror #52              // ....................................................*
        eor x1, x22, x29                       // ....................................................*
        ldr x22, [sp, #STACK_LOC_1]            // ....................................................r // @slothy:is_restore // @slothy:reads=stack_1

                                                      // ----------------- cycle (expected) ----------------->
                                                      // 0                        25                       50
                                                      // |------------------------|------------------------|--
        // eor X<C0>, x4, x5                          // ..*..................................................
        // eor X<C0>, X<C0>,  x1                      // ..*..................................................
        // eor X<C0>, X<C0>,  x2                      // ...*.................................................
        // eor X<C0>, X<C0>,  x3                      // ...*.................................................
        // eor X<C1>, x9, x10                         // ..........*..........................................
        // eor X<C1>, X<C1>,  x6                      // ..........*..........................................
        // eor X<C1>, X<C1>,  x7                      // ...........*.........................................
        // eor X<C1>, X<C1>,  x8                      // ...........*.........................................
        // eor X<C2>, x14, x15                        // *....................................................
        // eor X<C2>, X<C2>,  x11                     // *....................................................
        // eor X<C2>, X<C2>,  x12                     // .*...................................................
        // eor X<C2>, X<C2>,  x13                     // .*...................................................
        // eor X<C3>, x19, x20                        // ........*............................................
        // eor X<C3>, X<C3>,  x16                     // ........*............................................
        // eor X<C3>, X<C3>,  x17                     // .........*...........................................
        // eor X<C3>, X<C3>,  x28                     // .........*...........................................
        // eor X<C4>, x24, x25                        // .....*...............................................
        // eor X<C4>, X<C4>,  x21                     // .....*...............................................
        // eor X<C4>, X<C4>,  x22                     // ......*..............................................
        // eor X<C4>, X<C4>,  x23                     // ......*..............................................
        // eor X<E1>, X<C0>, X<C2>, ror #63           // ....*................................................
        // eor X<E3>, X<C2>, X<C4>, ror #63           // .......*.............................................
        // eor X<E0>, X<C4>, X<C1>, ror #63           // ............*........................................
        // eor X<E2>, X<C1>, X<C3>, ror #63           // ..............*......................................
        // eor X<E4>, X<C3>, X<C0>, ror #63           // .............*.......................................
        // eor X<Bba>, x1, X<E0>                      // .................................*...................
        // eor X<Bsa>, x11, X<E2>                     // ......................*..............................
        // eor X<Bbi>, x13, X<E2>                     // .................................*...................
        // eor X<Bki>, x28, X<E3>                     // .....................*...............................
        // eor X<Bko>, x24, X<E4>                     // ..............................*......................
        // eor X<Bmu>, x20, X<E3>                     // ................................*....................
        // eor X<Bso>, x4, X<E0>                      // ............*........................................
        // eor X<Bka>, x6, X<E1>                      // ....*................................................
        // eor X<Bse>, x17, X<E3>                     // .......*.............................................
        // eor X<Bgo>, x9, X<E1>                      // ...............*.....................................
        // eor X<Bke>, x12, X<E2>                     // ........................*............................
        // eor X<Bgi>, x3, X<E0>                      // ....................*................................
        // eor X<Bga>, x16, X<E3>                     // .................*...................................
        // eor X<Bbo>, x19, X<E3>                     // ...............................*.....................
        // eor X<Bmo>, x14, X<E2>                     // ........................*............................
        // eor X<Bmi>, x8, X<E1>                      // .............................*.......................
        // eor X<Bge>, x22, X<E4>                     // ..................*..................................
        // eor X<Bgu>, x15, X<E2>                     // ...............*.....................................
        // eor X<Bsi>, x23, X<E4>                     // .............*.......................................
        // eor X<Bku>, x5, X<E0>                      // ....................................*................
        // eor X<Bma>, x21, X<E4>                     // ...........................*.........................
        // eor X<Bbu>, x25, X<E4>                     // ...............................*.....................
        // eor X<Bsu>, x10, X<E1>                     // ......................*..............................
        // eor X<Bme>, x2, X<E0>                      // ................*....................................
        // eor X<Bbe>, x7, X<E1>                      // ..........................*..........................
        // ldr X<caddr>, [sp, #STACK_LOC_CONST]       // .........................*...........................
        // ldr X<cur_const>, [X<caddr>]               // ...............................................*.....
        // mov X<count>, #1                           // ...........................*.........................
        // str X<count>, [sp, #STACK_LOC_COUNT]       // ..............................*......................
        // bic X<tmp>, X<Bgi>, X<Bge>, ror #47        // ....................*................................
        // eor x2, X<tmp>, X<Bga>, ror #39            // .....................*...............................
        // bic X<tmp>, X<Bgo>, X<Bgi>, ror #42        // ..........................*..........................
        // eor x7, X<tmp>, X<Bge>, ror #25            // ............................*........................
        // bic X<tmp>, X<Bgu>, X<Bgo>, ror #16        // ................*....................................
        // eor x12, X<tmp>, X<Bgi>, ror #58           // .........................*...........................
        // bic X<tmp>, X<Bga>, X<Bgu>, ror #31        // .................*...................................
        // eor x17, X<tmp>, X<Bgo>, ror #47           // ...........................................*.........
        // bic X<tmp>, X<Bge>, X<Bga>, ror #56        // ..................*..................................
        // eor x22, X<tmp>, X<Bgu>, ror #23           // ...................*.................................
        // bic X<tmp>, X<Bki>, X<Bke>, ror #19        // ..................................................*..
        // eor x3, X<tmp>, X<Bka>, ror #24            // ..................................................*..
        // bic X<tmp>, X<Bko>, X<Bki>, ror #47        // ................................................*....
        // eor x8, X<tmp>, X<Bke>, ror #2             // .................................................*...
        // bic X<tmp>, X<Bku>, X<Bko>, ror #10        // ...............................................*.....
        // eor x13, X<tmp>, X<Bki>, ror #57           // .................................................*...
        // bic X<tmp>, X<Bka>, X<Bku>, ror #47        // ............................................*........
        // eor x28, X<tmp>, X<Bko>, ror #57           // ..............................................*......
        // bic X<tmp>, X<Bke>, X<Bka>, ror #5         // ...................................................*.
        // eor x23, X<tmp>, X<Bku>, ror #52           // ....................................................*
        // bic X<tmp>, X<Bmi>, X<Bme>, ror #38        // .......................................*.............
        // eor x4, X<tmp>, X<Bma>, ror #47            // .........................................*...........
        // bic X<tmp>, X<Bmo>, X<Bmi>, ror #5         // ..............................................*......
        // eor x9, X<tmp>, X<Bme>, ror #43            // ...................................................*.
        // bic X<tmp>, X<Bmu>, X<Bmo>, ror #41        // .......................................*.............
        // eor x14, X<tmp>, X<Bmi>, ror #46           // ................................................*....
        // bic X<tmp>, X<Bma>, X<Bmu>, ror #35        // .....................................*...............
        // eor x19, X<tmp>, X<Bmo>, ror #12           // .............................................*.......
        // bic X<tmp>, X<Bme>, X<Bma>, ror #9         // ........................................*............
        // eor x24, X<tmp>, X<Bmu>, ror #44           // ............................................*........
        // bic X<tmp>, X<Bsi>, X<Bse>, ror #48        // ...................*.................................
        // eor x5, X<tmp>, X<Bsa>, ror #41            // .........................................*...........
        // bic X<tmp>, X<Bso>, X<Bsi>, ror #2         // ..............*......................................
        // eor x10, X<tmp>, X<Bse>, ror #50           // ......................................*..............
        // bic X<tmp>, X<Bsu>, X<Bso>, ror #25        // .............................*.......................
        // eor x15, X<tmp>, X<Bsi>, ror #27           // ...........................................*.........
        // bic X<tmp>, X<Bsa>, X<Bsu>, ror #60        // .......................*.............................
        // eor x20, X<tmp>, X<Bso>, ror #21           // ................................*....................
        // bic X<tmp>, X<Bse>, X<Bsa>, ror #57        // ............................*........................
        // eor x25, X<tmp>, X<Bsu>, ror #53           // ......................................*..............
        // bic X<tmp>, X<Bbi>, X<Bbe>, ror #63        // ..................................*..................
        // eor x1, X<Bba>, X<tmp>, ror #21            // ...................................*.................
        // bic X<tmp>, X<Bbo>, X<Bbi>, ror #42        // ...................................*.................
        // eor x6, X<tmp>, X<Bbe>, ror #41            // ..........................................*..........
        // bic X<tmp>, X<Bbu>, X<Bbo>, ror #57        // ..................................*..................
        // eor x11, X<tmp>, X<Bbi>, ror #35           // ..........................................*..........
        // bic X<tmp>, X<Bba>, X<Bbu>, ror #50        // ....................................*................
        // eor x16, X<tmp>, X<Bbo>, ror #43           // .....................................*...............
        // bic X<tmp>, X<Bbe>, X<Bba>, ror #44        // ........................................*............
        // eor x21, X<tmp>, X<Bbu>, ror #30           // .............................................*.......
        // eor x1, x1, X<cur_const>                   // ....................................................*

        keccak_f1600_x1_scalar_no_lazy_loop:

                                                // Instructions:    110
                                                // Expected cycles: 55
                                                // Expected IPC:    2.00

                                                // Cycle bound:     55.0
                                                // IPC bound:       2.00

                                                // Wall time:     174.09s
                                                // User time:     174.09s

                                                // ------------------ cycle (expected) ------------------>
                                                // 0                        25                       50
                                                // |------------------------|------------------------|----
        eor x27, x8, x9, ror #57                // *......................................................
        eor x27, x27, x6, ror #51               // *......................................................
        eor x30, x27, x10, ror #31              // .*.....................................................
        eor x30, x30, x7, ror #27               // .*.....................................................
        ror x27, x30, #56                       // ..*....................................................
        eor x0, x16, x28, ror #63               // ..*....................................................
        eor x26, x0, x19, ror #37               // ...*...................................................
        eor x29, x26, x17, ror #36              // ...*...................................................
        eor x29, x29, x20, ror #2               // ....*..................................................
        eor x0, x27, x29, ror #63               // ....*..................................................
        eor x26, x0, x13, ror #46               // .....*.................................................
        str x26, [sp, #STACK_LOC_0]             // .....s.................................................  // @slothy:is_spill // @slothy:writes=stack_0
        eor x27, x15, x11, ror #52              // .....*.................................................
        eor x13, x27, x13, ror #48              // ......*................................................
        str x13, [sp, #STACK_LOC_1]             // ......s................................................  // @slothy:is_spill // @slothy:writes=stack_1
        eor x27, x1, x2, ror #61                // ......*................................................
        eor x27, x27, x4, ror #54               // .......*...............................................
        eor x27, x27, x3, ror #39               // .......*...............................................
        eor x27, x27, x5, ror #25               // ........*..............................................
        eor x29, x29, x27, ror #63              // ........*..............................................
        eor x13, x29, x21, ror #20              // .........*.............................................
        str x13, [sp, #STACK_LOC_2]             // .........s.............................................  // @slothy:is_spill // @slothy:writes=stack_2
        eor x13, x23, x22, ror #50              // .........*.............................................
        eor x13, x13, x24, ror #34              // ..........*............................................
        eor x21, x13, x21, ror #26              // ..........*............................................
        ldr x13, [sp, #STACK_LOC_1]             // ..........r............................................  // @slothy:is_restore // @slothy:reads=stack_1
        str x21, [sp, #STACK_LOC_1]             // ..........s............................................  // @slothy:is_spill // @slothy:writes=stack_1
        eor x21, x13, x14, ror #10              // ...........*...........................................
        eor x21, x21, x12, ror #5               // ...........*...........................................
        ror x13, x21, #62                       // ............*..........................................
        str x13, [sp, #STACK_LOC_3]             // ............s..........................................  // @slothy:is_spill // @slothy:writes=stack_3
        eor x27, x27, x21, ror #61              // ............*..........................................
        ldr x21, [sp, #STACK_LOC_1]             // ............r..........................................  // @slothy:is_restore // @slothy:reads=stack_1
        ldr x13, [sp, #STACK_LOC_3]             // ............r..........................................  // @slothy:is_restore // @slothy:reads=stack_3
        eor x21, x21, x25, ror #15              // .............*.........................................
        eor x13, x13, x21, ror #57              // .............*.........................................
        eor x20, x13, x20, ror #2               // ..............*........................................
        ror x21, x21, #58                       // ..............*........................................
        eor x30, x21, x30, ror #55              // ...............*.......................................
        eor x2, x30, x2, ror #61                // ...............*.......................................
        eor x21, x13, x28, ror #63              // ................*......................................
        eor x28, x27, x6, ror #43               // ................*......................................
        eor x5, x30, x5, ror #25                // .................*.....................................
        bic x26, x28, x5, ror #47               // .................*.....................................
        eor x6, x29, x24, ror #28               // ..................*....................................
        str x6, [sp, #STACK_LOC_1]              // ..................s....................................  // @slothy:is_spill // @slothy:writes=stack_1
        eor x24, x0, x12, ror #3                // ..................*....................................
        bic x12, x21, x24, ror #19              // ...................*...................................
        eor x6, x30, x3, ror #39                // ...................*...................................
        eor x3, x12, x28, ror #24               // ....................*..................................
        str x3, [sp, #STACK_LOC_3]              // ....................s..................................  // @slothy:is_spill // @slothy:writes=stack_3
        eor x7, x27, x7, ror #19                // ....................*..................................
        eor x3, x30, x1                         // .....................*.................................
        bic x1, x7, x3, ror #44                 // .....................*.................................
        eor x22, x29, x22, ror #44              // ......................*................................
        bic x12, x6, x22, ror #47               // ......................*................................
        str x12, [sp, #STACK_LOC_4]             // ......................s................................  // @slothy:is_spill // @slothy:writes=stack_4
        eor x15, x0, x15, ror #62               // .......................*...............................
        eor x9, x27, x9, ror #49                // .......................*...............................
        bic x12, x15, x9, ror #16               // ........................*..............................
        str x12, [sp, #STACK_LOC_5]             // ........................s..............................  // @slothy:is_spill // @slothy:writes=stack_5
        eor x16, x13, x16                       // ........................*..............................
        bic x12, x22, x16, ror #56              // .........................*.............................
        str x12, [sp, #STACK_LOC_6]             // .........................s.............................  // @slothy:is_spill // @slothy:writes=stack_6
        eor x8, x27, x8, ror #56                // .........................*.............................
        ldr x12, [sp, #STACK_LOC_5]             // .........................r.............................  // @slothy:is_restore // @slothy:reads=stack_5
        str x8, [sp, #STACK_LOC_5]              // .........................s.............................  // @slothy:is_spill // @slothy:writes=stack_5
        eor x12, x12, x6, ror #58               // ..........................*............................
        str x12, [sp, #STACK_LOC_7]             // ..........................s............................  // @slothy:is_spill // @slothy:writes=stack_7
        bic x12, x9, x6, ror #42                // ..........................*............................
        ldr x6, [sp, #STACK_LOC_1]              // ..........................r............................  // @slothy:is_restore // @slothy:reads=stack_1
        str x12, [sp, #STACK_LOC_1]             // ..........................s............................  // @slothy:is_spill // @slothy:writes=stack_1
        bic x8, x6, x21, ror #47                // ...........................*...........................
        eor x8, x8, x24, ror #2                 // ...........................*...........................
        str x8, [sp, #STACK_LOC_8]              // ...........................s...........................  // @slothy:is_spill // @slothy:writes=stack_8
        bic x8, x24, x28, ror #5                // ............................*..........................
        str x8, [sp, #STACK_LOC_9]              // ............................s..........................  // @slothy:is_spill // @slothy:writes=stack_9
        eor x24, x29, x25, ror #9               // ............................*..........................
        eor x25, x30, x4, ror #54               // .............................*.........................
        eor x12, x13, x17, ror #36              // .............................*.........................
        bic x28, x5, x6, ror #10                // ..............................*........................
        str x28, [sp, #STACK_LOC_10]            // ..............................s........................  // @slothy:is_spill // @slothy:writes=stack_10
        eor x19, x13, x19, ror #37              // ..............................*........................
        ldr x28, [sp, #STACK_LOC_10]            // ..............................r........................  // @slothy:is_restore // @slothy:reads=stack_10
        eor x13, x28, x21, ror #57              // ...............................*.......................
        str x13, [sp, #STACK_LOC_10]            // ...............................s.......................  // @slothy:is_spill // @slothy:writes=stack_10
        eor x21, x1, x24, ror #30               // ...............................*.......................
        ldr x13, [sp, #STACK_LOC_2]             // ...............................r.......................  // @slothy:is_restore // @slothy:reads=stack_2
        eor x28, x0, x11, ror #50               // ................................*......................
        eor x10, x27, x10, ror #23              // ................................*......................
        eor x27, x0, x14, ror #8                // .................................*.....................
        bic x4, x28, x10, ror #60               // .................................*.....................
        bic x17, x2, x13, ror #9                // ..................................*....................
        bic x11, x24, x19, ror #57              // ..................................*....................
        bic x0, x20, x27, ror #41               // ...................................*...................
        bic x1, x3, x24, ror #50                // ...................................*...................
        eor x24, x17, x20, ror #44              // ....................................*..................
        bic x14, x13, x20, ror #35              // ....................................*..................
        eor x20, x4, x25, ror #21               // .....................................*.................
        bic x8, x10, x25, ror #25               // .....................................*.................
        str x8, [sp, #STACK_LOC_2]              // .....................................s.................  // @slothy:is_spill // @slothy:writes=stack_2
        bic x4, x12, x28, ror #57               // ......................................*................
        eor x30, x29, x23, ror #58              // ......................................*................
        bic x8, x25, x30, ror #2                // .......................................*...............
        str x8, [sp, #STACK_LOC_11]             // .......................................s...............  // @slothy:is_spill // @slothy:writes=stack_11
        eor x25, x4, x10, ror #53               // .......................................*...............
        ldr x8, [sp, #STACK_LOC_9]              // .......................................r...............  // @slothy:is_restore // @slothy:reads=stack_9
        bic x17, x30, x12, ror #48              // ........................................*..............
        eor x23, x8, x5, ror #52                // ........................................*..............
        eor x5, x17, x28, ror #41               // .........................................*.............
        ldr x29, [sp, #STACK_LOC_COUNT]         // .........................................*.............  // @slothy:reads=STACK_LOC_COUNT
        ldr x4, [sp, #STACK_LOC_CONST]          // ..........................................*............
        ldr x8, [x4, x29, LSL #3]               // ..........................................*............
        str x8, [sp, #STACK_LOC_9]              // ..........................................s............  // @slothy:is_spill // @slothy:writes=stack_9
        add x4, x29, #1                         // ...........................................*...........
        ldr x8, [sp, #STACK_LOC_11]             // ...........................................r...........  // @slothy:is_restore // @slothy:reads=stack_11
        str x4, [sp, #STACK_LOC_COUNT]          // ...........................................*...........  // @slothy:writes=STACK_LOC_COUNT
        eor x10, x8, x12, ror #50               // ............................................*..........
        ldr x8, [sp, #STACK_LOC_5]              // ............................................r..........  // @slothy:is_restore // @slothy:reads=stack_5
        ldr x12, [sp, #STACK_LOC_1]             // ............................................r..........  // @slothy:is_restore // @slothy:reads=stack_1
        cmp x4, #(KECCAK_F1600_ROUNDS-1)        // ............................................*..........  // @slothy:ignore_useless_output
        eor x28, x26, x6, ror #57               // .............................................*.........
        ldr x26, [sp, #STACK_LOC_0]             // .............................................r.........  // @slothy:is_restore // @slothy:reads=stack_0
        bic x4, x19, x26, ror #42               // .............................................*.........
        eor x6, x4, x7, ror #41                 // ..............................................*........
        bic x29, x26, x7, ror #63               // ..............................................*........
        eor x7, x12, x22, ror #25               // ...............................................*.......
        ldr x12, [sp, #STACK_LOC_6]             // ...............................................r.......  // @slothy:is_restore // @slothy:reads=stack_6
        eor x22, x12, x15, ror #23              // ...............................................*.......
        bic x17, x16, x15, ror #31              // ................................................*......
        eor x17, x17, x9, ror #47               // ................................................*......
        bic x12, x27, x8, ror #5                // .................................................*.....
        eor x9, x12, x2, ror #43                // .................................................*.....
        ldr x12, [sp, #STACK_LOC_4]             // .................................................r.....  // @slothy:is_restore // @slothy:reads=stack_4
        bic x15, x8, x2, ror #38                // ..................................................*....
        eor x2, x12, x16, ror #39               // ..................................................*....
        ldr x12, [sp, #STACK_LOC_7]             // ..................................................r....  // @slothy:is_restore // @slothy:reads=stack_7
        eor x16, x1, x19, ror #43               // ...................................................*...
        eor x19, x14, x27, ror #12              // ...................................................*...
        eor x14, x0, x8, ror #46                // ....................................................*..
        ldr x8, [sp, #STACK_LOC_2]              // ....................................................r..  // @slothy:is_restore // @slothy:reads=stack_2
        eor x4, x15, x13, ror #47               // ....................................................*..
        ldr x13, [sp, #STACK_LOC_10]            // ....................................................r..  // @slothy:is_restore // @slothy:reads=stack_10
        eor x11, x11, x26, ror #35              // .....................................................*.
        eor x15, x8, x30, ror #27               // .....................................................*.
        ldr x8, [sp, #STACK_LOC_9]              // .....................................................r.  // @slothy:is_restore // @slothy:reads=stack_9
        eor x1, x3, x29, ror #21                // ......................................................*
        ldr x3, [sp, #STACK_LOC_3]              // ......................................................r  // @slothy:is_restore // @slothy:reads=stack_3
        eor x1, x1, x8                          // ......................................................*
        ldr x8, [sp, #STACK_LOC_8]              // ......................................................r  // @slothy:is_restore // @slothy:reads=stack_8

                                                               // ------------------ cycle (expected) ------------------>
                                                               // 0                        25                       50
                                                               // |------------------------|------------------------|----
        // eor X<C0>, x1,   x2, ror #61                         // ......*................................................
        // eor X<C0>, X<C0>, x4, ror #54                        // .......*...............................................
        // eor X<C0>, X<C0>, x3, ror #39                        // .......*...............................................
        // eor X<C0>, X<C0>, x5, ror #25                        // ........*..............................................
        // eor X<C1>, x8,   x9, ror #57                         // *......................................................
        // eor X<C1>, X<C1>, x6, ror #51                        // *......................................................
        // eor X<C1>, X<C1>, x10, ror #31                       // .*.....................................................
        // eor X<C1>, X<C1>, x7, ror #27                        // .*.....................................................
        // eor X<C2>, x15,   x11, ror #52                       // .....*.................................................
        // eor X<C2>, X<C2>, x13, ror #48                       // ......*................................................
        // eor X<C2>, X<C2>, x14, ror #10                       // ...........*...........................................
        // eor X<C2>, X<C2>, x12, ror #5                        // ...........*...........................................
        // eor X<C3>, x16,   x28, ror #63                       // ..*....................................................
        // eor X<C3>, X<C3>, x19, ror #37                       // ...*...................................................
        // eor X<C3>, X<C3>, x17, ror #36                       // ...*...................................................
        // eor X<C3>, X<C3>, x20, ror #2                        // ....*..................................................
        // eor X<C4>, x23,   x22, ror #50                       // .........*.............................................
        // eor X<C4>, X<C4>, x24, ror #34                       // ..........*............................................
        // eor X<C4>, X<C4>, x21, ror #26                       // ..........*............................................
        // eor X<C4>, X<C4>, x25, ror #15                       // .............*.........................................
        // eor X<E1>, X<C0>, X<C2>, ror #61                     // ............*..........................................
        // ror X<C2>, X<C2>, #62                                // ............*..........................................
        // eor X<E3>, X<C2>, X<C4>, ror #57                     // .............*.........................................
        // ror X<C4>, X<C4>, #58                                // ..............*........................................
        // eor X<E0>, X<C4>, X<C1>, ror #55                     // ...............*.......................................
        // ror X<C1>, X<C1>, #56                                // ..*....................................................
        // eor X<E2>, X<C1>, X<C3>, ror #63                     // ....*..................................................
        // eor X<E4>, X<C3>, X<C0>, ror #63                     // ........*..............................................
        // eor X<Bba>, X<E0>, x1                                // .....................*.................................
        // eor X<Bsa>, X<E2>, x11, ror #50                      // ................................*......................
        // eor X<Bbi>, X<E2>, x13, ror #46                      // .....*.................................................
        // eor X<Bki>, X<E3>, x28, ror #63                      // ................*......................................
        // eor X<Bko>, X<E4>, x24, ror #28                      // ..................*....................................
        // eor X<Bmu>, X<E3>, x20, ror #2                       // ..............*........................................
        // eor X<Bso>, X<E0>, x4, ror #54                       // .............................*.........................
        // eor X<Bka>, X<E1>, x6, ror #43                       // ................*......................................
        // eor X<Bse>, X<E3>, x17, ror #36                      // .............................*.........................
        // eor X<Bgo>, X<E1>, x9, ror #49                       // .......................*...............................
        // eor X<Bke>, X<E2>, x12, ror #3                       // ..................*....................................
        // eor X<Bgi>, X<E0>, x3, ror #39                       // ...................*...................................
        // eor X<Bga>, X<E3>, x16                               // ........................*..............................
        // eor X<Bbo>, X<E3>, x19, ror #37                      // ..............................*........................
        // eor X<Bmo>, X<E2>, x14, ror #8                       // .................................*.....................
        // eor X<Bmi>, X<E1>, x8, ror #56                       // .........................*.............................
        // eor X<Bge>, X<E4>, x22, ror #44                      // ......................*................................
        // eor X<Bgu>, X<E2>, x15, ror #62                      // .......................*...............................
        // eor X<Bsi>, X<E4>, x23, ror #58                      // ......................................*................
        // eor X<Bku>, X<E0>, x5, ror #25                       // .................*.....................................
        // eor X<Bma>, X<E4>, x21, ror #20                      // .........*.............................................
        // eor X<Bbu>, X<E4>, x25, ror #9                       // ............................*..........................
        // eor X<Bsu>, X<E1>, x10, ror #23                      // ................................*......................
        // eor X<Bme>, X<E0>, x2, ror #61                       // ...............*.......................................
        // eor X<Bbe>, X<E1>, x7, ror #19                       // ....................*..................................
        // ldr X<caddr>, [sp, #STACK_LOC_CONST]                 // ..........................................*............
        // ldr X<count>, [sp, #STACK_LOC_COUNT]                 // .........................................*.............
        // ldr X<cur_const>, [X<caddr>, X<count>, LSL #3]       // ..........................................*............
        // add X<count>, X<count>, #1                           // ...........................................*...........
        // cmp X<count>, #(KECCAK_F1600_ROUNDS-1)               // ............................................*..........
        // str X<count>, [sp, #STACK_LOC_COUNT]                 // ...........................................*...........
        // bic X<tmp>, X<Bgi>, X<Bge>, ror #47                  // ......................*................................
        // eor x2, X<tmp>, X<Bga>, ror #39                      // ..................................................*....
        // bic X<tmp>, X<Bgo>, X<Bgi>, ror #42                  // ..........................*............................
        // eor x7, X<tmp>, X<Bge>, ror #25                      // ...............................................*.......
        // bic X<tmp>, X<Bgu>, X<Bgo>, ror #16                  // ........................*..............................
        // eor x12, X<tmp>, X<Bgi>, ror #58                     // ..........................*............................
        // bic X<tmp>, X<Bga>, X<Bgu>, ror #31                  // ................................................*......
        // eor x17, X<tmp>, X<Bgo>, ror #47                     // ................................................*......
        // bic X<tmp>, X<Bge>, X<Bga>, ror #56                  // .........................*.............................
        // eor x22, X<tmp>, X<Bgu>, ror #23                     // ...............................................*.......
        // bic X<tmp>, X<Bki>, X<Bke>, ror #19                  // ...................*...................................
        // eor x3, X<tmp>, X<Bka>, ror #24                      // ....................*..................................
        // bic X<tmp>, X<Bko>, X<Bki>, ror #47                  // ...........................*...........................
        // eor x8, X<tmp>, X<Bke>, ror #2                       // ...........................*...........................
        // bic X<tmp>, X<Bku>, X<Bko>, ror #10                  // ..............................*........................
        // eor x13, X<tmp>, X<Bki>, ror #57                     // ...............................*.......................
        // bic X<tmp>, X<Bka>, X<Bku>, ror #47                  // .................*.....................................
        // eor x28, X<tmp>, X<Bko>, ror #57                     // .............................................*.........
        // bic X<tmp>, X<Bke>, X<Bka>, ror #5                   // ............................*..........................
        // eor x23, X<tmp>, X<Bku>, ror #52                     // ........................................*..............
        // bic X<tmp>, X<Bmi>, X<Bme>, ror #38                  // ..................................................*....
        // eor x4, X<tmp>, X<Bma>, ror #47                      // ....................................................*..
        // bic X<tmp>, X<Bmo>, X<Bmi>, ror #5                   // .................................................*.....
        // eor x9, X<tmp>, X<Bme>, ror #43                      // .................................................*.....
        // bic X<tmp>, X<Bmu>, X<Bmo>, ror #41                  // ...................................*...................
        // eor x14, X<tmp>, X<Bmi>, ror #46                     // ....................................................*..
        // bic X<tmp>, X<Bma>, X<Bmu>, ror #35                  // ....................................*..................
        // eor x19, X<tmp>, X<Bmo>, ror #12                     // ...................................................*...
        // bic X<tmp>, X<Bme>, X<Bma>, ror #9                   // ..................................*....................
        // eor x24, X<tmp>, X<Bmu>, ror #44                     // ....................................*..................
        // bic X<tmp>, X<Bsi>, X<Bse>, ror #48                  // ........................................*..............
        // eor x5, X<tmp>, X<Bsa>, ror #41                      // .........................................*.............
        // bic X<tmp>, X<Bso>, X<Bsi>, ror #2                   // .......................................*...............
        // eor x10, X<tmp>, X<Bse>, ror #50                     // ............................................*..........
        // bic X<tmp>, X<Bsu>, X<Bso>, ror #25                  // .....................................*.................
        // eor x15, X<tmp>, X<Bsi>, ror #27                     // .....................................................*.
        // bic X<tmp>, X<Bsa>, X<Bsu>, ror #60                  // .................................*.....................
        // eor x20, X<tmp>, X<Bso>, ror #21                     // .....................................*.................
        // bic X<tmp>, X<Bse>, X<Bsa>, ror #57                  // ......................................*................
        // eor x25, X<tmp>, X<Bsu>, ror #53                     // .......................................*...............
        // bic X<tmp>, X<Bbi>, X<Bbe>, ror #63                  // ..............................................*........
        // eor x1, X<Bba>, X<tmp>, ror #21                      // ......................................................*
        // bic X<tmp>, X<Bbo>, X<Bbi>, ror #42                  // .............................................*.........
        // eor x6, X<tmp>, X<Bbe>, ror #41                      // ..............................................*........
        // bic X<tmp>, X<Bbu>, X<Bbo>, ror #57                  // ..................................*....................
        // eor x11, X<tmp>, X<Bbi>, ror #35                     // .....................................................*.
        // bic X<tmp>, X<Bba>, X<Bbu>, ror #50                  // ...................................*...................
        // eor x16, X<tmp>, X<Bbo>, ror #43                     // ...................................................*...
        // bic X<tmp>, X<Bbe>, X<Bba>, ror #44                  // .....................*.................................
        // eor x21, X<tmp>, X<Bbu>, ror #30                     // ...............................*.......................
        // eor x1, x1, X<cur_const>                             // ......................................................*

        keccak_f1600_x1_scalar_no_lazy_end_loop:

    ble keccak_f1600_x1_scalar_no_lazy_loop

keccak_f1600_x1_scalar_no_lazy_final:
    final_rotate
    ldr input_addr, [sp, #STACK_LOC_INPUT] // @slothy:reads=STACK_LOC_INPUT
    store_state
keccak_f1600_x1_scalar_no_lazy_end_final:

    restore_gprs
    free_stack
    ret

/****************** REGISTER DEALLOCATIONS *******************/
    .unreq input_addr
    .unreq input_rc
    .unreq const_addr
    .unreq Aba
    .unreq Abe
    .unreq Abi
    .unreq Abo
    .unreq Abu
    .unreq Aga
    .unreq Age
    .unreq Agi
    .unreq Ago
    .unreq Agu
    .unreq Aka
    .unreq Ake
    .unreq Aki
    .unreq Ako
    .unreq Aku
    .unreq Ama
    .unreq Ame
    .unreq Ami
    .unreq Amo
    .unreq Amu
    .unreq Asa
    .unreq Ase
    .unreq Asi
    .unreq Aso
    .unreq Asu

/* To facilitate single-compilation-unit (SCU) builds, undefine all macros.
 * Don't modify by hand -- this is auto-generated by scripts/autogen. */
#undef STACK_LOCS
#undef STACK_SIZE
#undef STACK_BASE_GPRS
#undef STACK_LOC_INPUT
#undef STACK_LOC_CONST
#undef STACK_LOC_COUNT
#undef STACK_LOC_MISC
#undef STACK_LOC_0
#undef STACK_LOC_1
#undef STACK_LOC_2
#undef STACK_LOC_3
#undef STACK_LOC_4
#undef STACK_LOC_5
#undef STACK_LOC_6
#undef STACK_LOC_7
#undef STACK_LOC_8
#undef STACK_LOC_9
#undef STACK_LOC_10
#undef STACK_LOC_11
#undef STACK_LOC_12
#undef STACK_LOC_13
#undef STACK_LOC_14
#undef STACK_LOC_15
#undef STACK_LOC_16
#undef STACK_LOC_17
#undef STACK_LOC_18
#undef STACK_LOC_19
#undef STACK_LOC_20
#undef STACK_LOC_21
#undef STACK_LOC_22
#undef STACK_LOC_23
#undef STACK_LOC_24
#undef STACK_LOC_25
#undef STACK_LOC_26
#undef STACK_LOC_27
#undef STACK_LOC_28
#undef STACK_LOC_29
#undef STACK_LOC_30
#undef STACK_LOC_31
#undef STACK_LOC_32
#undef STACK_LOC_33
#undef STACK_LOC_34
#undef STACK_LOC_35
#undef STACK_LOC_36
#undef STACK_LOC_37
#undef STACK_LOC_38
#undef STACK_LOC_39
#undef KECCAK_F1600_ROUNDS

/* simpasm: footer-start */
#endif /* MLK_FIPS202_AARCH64_NEED_X1_SCALAR && \
          !MLK_CONFIG_MULTILEVEL_NO_SHARED */
